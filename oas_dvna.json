{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "NodeJS DWNA",
    "description": "Christopher NodeJS DWNA"
  },
  "servers": [
    {
      "url": "http://{ip}:{port}",
      "description": "API Test",
      "variables": {
        "port": {
          "enum": [
            "8000",
            "8080"
          ],
          "default": "8000"
        },
        "ip": {
          "enum": [
            "127.0.0.1"
          ],
          "default":  "127.0.0.1"
        }
      }
    },
    {
      "url": "http://{ip}:{port}",
      "description": "API Test",
      "variables": {
        "port": {
          "enum": [
            "1000"
          ],
          "default": "1000"
        },
        "ip": {
          "enum": [
            "127.0.0.1"
          ],
          "default":  "127.0.0.1"
        }
      }
    }
  ],
  "paths": {
    "/ssrf": {
      "description": "ssrf",
      "get": {
        "description": "URL to fetch",
        "operationId": "url",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "URL to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Web Reachable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "web_reachable":{
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "web_reachable"
                  ]
                }
              }
            }  
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            } 
          }
        }
      }
    },
    "/pets/": {
      "description": "pets",
      "post": {
        "description": "Find a pet by his ID in body",
        "operationId": "findPetIdBody",
        "requestBody": {
          "description": "Pet to add to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PetById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Pet"
                }
              }
            }  
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            } 
          }
        }
      }
    },
    "/pets/shield/{id}": {
      "description": "pets/shield/{id}",
      "get": { 
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "findPetByIdShield",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "mininum":0
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of Pet",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Pet"
                }
              }
            }  
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            } 
          }
        }
      }
    },
    "/pets/{id}": {
      "description": "/pets/{id}",
      "get": { 
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "findPetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "mininum":0
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of Pet",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Pet"
                }
              }
            }  
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            } 
          }
        }
      }
    }
  },
  "components": { 
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message":{
            "type":"string"
          }
        },
        "required": [
          "message"
        ]
      },
      "PetById": {
        "type": "object",
        "properties": {
          "id":{
            "type": "integer",
            "format": "int32"
          },
          "name":{
            "type":"string",
            "format":"string"
          }
        },
        "required": [
          "id"
        ]
      },
      "Pet": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name":{
            "type":"string"
          }
        }
      }
    },
    "parameters":{
      "idpet" : {
        "name": "id",
        "in": "path",
        "description": "ID of pet sdsto fetch",
        "required": true,
        "schema": {
          "type": "number"
        }
      }
    }
  }
}